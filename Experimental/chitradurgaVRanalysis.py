import pandas as pd
import numpy as np
import matplotlib
import matplotlib.pyplot as plt

matplotlib.rcParams.update({'font.size': 16})

df = pd.read_excel(r'statsAPDTest.xlsx')
df.drop(columns=['Initial Angle(deg)', 'Max Left(deg)', 'Max Right(deg)', 'Trial'], inplace=True)
print(df.columns)

stat_cols = ['Age', 'Height(cm)', 'Weight(Kg)', 'Actual Left(deg)', 'Actual Right(deg)', 'Range(deg)', 'Score',
             'Obstacles Collided', 'Potholes Struck', 'Reach(deg)', 'Step(deg)']

plt.scatter(df['No.'], df['Range(deg)'])
plt.plot([df['Range(deg)'].mean()]*61, label="Mean")
plt.plot([df['Range(deg)'].mean() + df['Range(deg)'].std()]*61, color='Green')
plt.plot([df['Range(deg)'].mean() - df['Range(deg)'].std()]*61, color='Green')
plt.plot([df['Range(deg)'].mean() + 2*df['Range(deg)'].std()]*61, color='Red')
plt.plot([df['Range(deg)'].mean() - 2*df['Range(deg)'].std()]*61, color='Red')

plt.fill_between(range(0, 61), [df['Range(deg)'].mean() + df['Range(deg)'].std()]*61, [df['Range(deg)'].mean() - df['Range(deg)'].std()]*61, color='green', label='1 Standard deviation', alpha=0.1)
plt.fill_between(range(0, 61), [df['Range(deg)'].mean() + 2*df['Range(deg)'].std()]*61, [df['Range(deg)'].mean() - 2*df['Range(deg)'].std()]*61, color='red', label='2 Standard deviations', alpha=0.1)
plt.title("Outliers by Standard Deviation")
plt.xlabel("Samples")
plt.ylabel("Sway Range(deg)")
plt.legend()
plt.show()

IQR = df['Range(deg)'].describe()['75%'] - df['Range(deg)'].describe()['25%']
plt.scatter(df['No.'], df['Range(deg)'])
plt.plot([df['Range(deg)'].median()]*61, label="Median")
plt.plot([df['Range(deg)'].describe()['75%'] + 1.5*IQR]*61, color='Green')
plt.plot([df['Range(deg)'].describe()['25%'] - 1.5*IQR]*61, color='Green')
plt.fill_between(range(0, 61), [df['Range(deg)'].describe()['75%'] + 1.5*IQR]*61, [df['Range(deg)'].describe()['25%'] - 1.5*IQR]*61, color='green', label='Q1-1.5IQR to Q3+1.5IQR', alpha=0.1)
plt.title("Outliers by Interquartile Range")
plt.xlabel("Samples")
plt.ylabel("Sway Range(deg)")
plt.legend()
plt.show()

std_filt_iqr = df.loc[(df['Range(deg)'] > df['Range(deg)'].describe()['75%']+1.5*IQR) |
      (df['Range(deg)'] < df['Range(deg)'].describe()['25%']-1.5*IQR)].index
print(df.iloc[std_filt_iqr]['Name'])
df_filt_iqr = df.drop(index=std_filt_iqr)
df_filt_iqr.reset_index(inplace=True)
df_filt_iqr.drop(columns=['index'], inplace=True)
df = df_filt_iqr

stats = df[stat_cols].describe().round(2)
male_stats = df.loc[df['Gender']=='M'][stat_cols].describe().round(2)
female_stats = df.loc[df['Gender']=='F'][stat_cols].describe().round(2)
types = ["M({})".format(df['Gender'].value_counts()['M']),
         "F({})".format(df['Gender'].value_counts()['F']),
         "All({})".format(len(df))]
iterables = [np.array(stats.index), types]
combined = pd.DataFrame(index=pd.MultiIndex.from_product(iterables, names=["Stats", "Gender"]), columns = stat_cols)

for i in combined.index:
    for j in stat_cols:
        if 'M' in i[1]:
            combined.loc[i, j] = male_stats.loc[i[0], j]
        elif 'F' in i[1]:
            combined.loc[i, j] = female_stats.loc[i[0], j]
        elif 'All' in i[1]:
            combined.loc[i, j] = stats.loc[i[0], j]

combined.drop(index=[("count", i) for i in types], inplace=True)

combined.to_csv("Gender_analysis_APD.csv")


fig = plt.figure()
gs = fig.add_gridspec(3, 2, wspace=0.3, hspace=0.8, height_ratios=[1.1,1,1])
axs = gs.subplots()
plt.subplot(gs[0, :], box_aspect=0.33, xlabel='Weight(Kg)', ylabel='Frequency')
plt.title('Wt. Distribution', color='Green')
plt.xlabel('Weight(Kg)', color='#BF0F2F')
plt.ylabel('Frequency', color='#BF0F2F')
plt.hist(df_filt_iqr['Weight(Kg)'])
axs[1, 0].scatter(df.loc[df['Gender']=='M']['Weight(Kg)'], df.loc[df['Gender']=='M']['Range(deg)'], label='Male', color='Red', alpha=0.5)
axs[1, 0].scatter(df.loc[df['Gender']=='F']['Weight(Kg)'], df.loc[df['Gender']=='F']['Range(deg)'], label='Female', color='Blue', alpha=0.5)
axs[1, 0].set_title("Wt. vs Sway Range", color='Green')
axs[1, 0].set_xlabel("Weight(Kg)", color='#BF0F2F')
axs[1, 0].set_ylabel("Sway Range(deg)", color='#BF0F2F')
# axs[1, 0].legend()
axs[1, 1].scatter(df.loc[df['Gender']=='M']['Weight(Kg)'], df.loc[df['Gender']=='M']['Score'], label='Male', color='Red', alpha=0.5)
axs[1, 1].scatter(df.loc[df['Gender']=='F']['Weight(Kg)'], df.loc[df['Gender']=='F']['Score'], label='Female', color='Blue', alpha=0.5)
axs[1, 1].set_title("Wt. vs Score", color='Green')
axs[1, 1].set_xlabel("Weight(Kg)", color='#BF0F2F')
axs[1, 1].set_ylabel("Score", color='#BF0F2F')
# axs[1, 1].legend()
axs[2, 0].scatter(df.loc[df['Gender']=='M']['Weight(Kg)'], df.loc[df['Gender']=='M']['Obstacles Collided'], label='Male', color='Red', alpha=0.5)
axs[2, 0].scatter(df.loc[df['Gender']=='F']['Weight(Kg)'], df.loc[df['Gender']=='F']['Obstacles Collided'], label='Female', color='Blue', alpha=0.5)
axs[2, 0].set_title("Wt. vs Obstacles Collided", color='Green')
axs[2, 0].set_xlabel("Weight(Kg)", color='#BF0F2F')
axs[2, 0].set_ylabel("Obstacles", color='#BF0F2F')
# axs[2, 0].legend()
axs[2, 1].scatter(df.loc[df['Gender']=='M']['Weight(Kg)'], df.loc[df['Gender']=='M']['Potholes Struck'], label='Male', color='Red', alpha=0.5)
axs[2, 1].scatter(df.loc[df['Gender']=='F']['Weight(Kg)'], df.loc[df['Gender']=='F']['Potholes Struck'], label='Female', color='Blue', alpha=0.5)
axs[2, 1].set_title("Wt. vs Potholes Struck", color='Green')
axs[2, 1].set_xlabel("Weight(Kg)", color='#BF0F2F')
axs[2, 1].set_ylabel("Potholes Struck", color='#BF0F2F')
# axs[2, 1].legend()
handles, labels = axs[2, 1].get_legend_handles_labels()
fig.legend(handles, labels)
plt.show()

fig = plt.figure()
gs = fig.add_gridspec(3, 2, wspace=0.3, hspace=0.8, height_ratios=[1.1,1,1])
axs = gs.subplots()
plt.subplot(gs[0, :], box_aspect=0.33, xlabel='Height(cm)', ylabel='Frequency')
plt.title('Ht. Distribution', color='Green')
plt.xlabel('Height(cm)', color='#BF0F2F')
plt.ylabel('Frequency', color='#BF0F2F')
plt.hist(df_filt_iqr['Height(cm)'])
axs[1, 0].scatter(df.loc[df['Gender']=='M']['Height(cm)'], df.loc[df['Gender']=='M']['Range(deg)'], label='Male', color='Red', alpha=0.5)
axs[1, 0].scatter(df.loc[df['Gender']=='F']['Height(cm)'], df.loc[df['Gender']=='F']['Range(deg)'], label='Female', color='Blue', alpha=0.5)
axs[1, 0].set_title("Ht. vs Sway Range", color='Green')
axs[1, 0].set_xlabel("Height(cm)", color='#BF0F2F')
axs[1, 0].set_ylabel("Sway Range(deg)", color='#BF0F2F')
# axs[1, 0].legend()
axs[1, 1].scatter(df.loc[df['Gender']=='M']['Height(cm)'], df.loc[df['Gender']=='M']['Score'], label='Male', color='Red', alpha=0.5)
axs[1, 1].scatter(df.loc[df['Gender']=='F']['Height(cm)'], df.loc[df['Gender']=='F']['Score'], label='Female', color='Blue', alpha=0.5)
axs[1, 1].set_title("Ht. vs Score", color='Green')
axs[1, 1].set_xlabel("Height(cm)", color='#BF0F2F')
axs[1, 1].set_ylabel("Score", color='#BF0F2F')
# axs[1, 1].legend()
axs[2, 0].scatter(df.loc[df['Gender']=='M']['Height(cm)'], df.loc[df['Gender']=='M']['Obstacles Collided'], label='Male', color='Red', alpha=0.5)
axs[2, 0].scatter(df.loc[df['Gender']=='F']['Height(cm)'], df.loc[df['Gender']=='F']['Obstacles Collided'], label='Female', color='Blue', alpha=0.5)
axs[2, 0].set_title("Ht. vs Obstacles Collided", color='Green')
axs[2, 0].set_xlabel("Height(cm)", color='#BF0F2F')
axs[2, 0].set_ylabel("Obstacles", color='#BF0F2F')
# axs[2, 0].legend()
axs[2, 1].scatter(df.loc[df['Gender']=='M']['Height(cm)'], df.loc[df['Gender']=='M']['Potholes Struck'], label='Male', color='Red', alpha=0.5)
axs[2, 1].scatter(df.loc[df['Gender']=='F']['Height(cm)'], df.loc[df['Gender']=='F']['Potholes Struck'], label='Female', color='Blue', alpha=0.5)
axs[2, 1].set_title("Ht. vs Potholes Struck", color='Green')
axs[2, 1].set_xlabel("Height(cm)", color='#BF0F2F')
axs[2, 1].set_ylabel("Potholes Struck", color='#BF0F2F')
# axs[2, 1].legend()
handles, labels = axs[2, 1].get_legend_handles_labels()
fig.legend(handles, labels)
plt.show()

fig = plt.figure()
gs = fig.add_gridspec(3, 2, wspace=0.3, hspace=0.8, height_ratios=[1.1,1,1])
axs = gs.subplots()
plt.subplot(gs[0, :], box_aspect=0.33, xlabel='Age', ylabel='Frequency')
plt.title('Age Distribution', color='Green')
plt.xlabel('Age', color='#BF0F2F')
plt.ylabel('Frequency', color='#BF0F2F')
plt.hist(df_filt_iqr['Age'])
axs[1, 0].scatter(df.loc[df['Gender']=='M']['Age'], df.loc[df['Gender']=='M']['Range(deg)'], label='Male', color='Red', alpha=0.5)
axs[1, 0].scatter(df.loc[df['Gender']=='F']['Age'], df.loc[df['Gender']=='F']['Range(deg)'], label='Female', color='Blue', alpha=0.5)
axs[1, 0].set_title("Age vs Sway Range", color='Green')
axs[1, 0].set_xlabel("Age", color='#BF0F2F')
axs[1, 0].set_ylabel("Sway Range(deg)", color='#BF0F2F')
# axs[1, 0].legend()
axs[1, 1].scatter(df.loc[df['Gender']=='M']['Age'], df.loc[df['Gender']=='M']['Score'], label='Male', color='Red', alpha=0.5)
axs[1, 1].scatter(df.loc[df['Gender']=='F']['Age'], df.loc[df['Gender']=='F']['Score'], label='Female', color='Blue', alpha=0.5)
axs[1, 1].set_title("Age vs Score", color='Green')
axs[1, 1].set_xlabel("Age", color='#BF0F2F')
axs[1, 1].set_ylabel("Score", color='#BF0F2F')
# axs[1, 1].legend()
axs[2, 0].scatter(df.loc[df['Gender']=='M']['Age'], df.loc[df['Gender']=='M']['Obstacles Collided'], label='Male', color='Red', alpha=0.5)
axs[2, 0].scatter(df.loc[df['Gender']=='F']['Age'], df.loc[df['Gender']=='F']['Obstacles Collided'], label='Female', color='Blue', alpha=0.5)
axs[2, 0].set_title("Age vs Obstacles Collided", color='Green')
axs[2, 0].set_xlabel("Age", color='#BF0F2F')
axs[2, 0].set_ylabel("Obstacles", color='#BF0F2F')
# axs[2, 0].legend()
axs[2, 1].scatter(df.loc[df['Gender']=='M']['Age'], df.loc[df['Gender']=='M']['Potholes Struck'], label='Male', color='Red', alpha=0.5)
axs[2, 1].scatter(df.loc[df['Gender']=='F']['Age'], df.loc[df['Gender']=='F']['Potholes Struck'], label='Female', color='Blue', alpha=0.5)
axs[2, 1].set_title("Age vs Potholes Struck", color='Green')
axs[2, 1].set_xlabel("Age", color='#BF0F2F')
axs[2, 1].set_ylabel("Potholes Struck", color='#BF0F2F')
# axs[2, 1].legend()
handles, labels = axs[2, 1].get_legend_handles_labels()
fig.legend(handles, labels)
plt.show()

fig = plt.figure()
gs = fig.add_gridspec(2, 2, wspace=0.3, hspace=0.8, height_ratios=[1, 1])
axs = gs.subplots()
plt.subplot(gs[0, :], box_aspect=0.33, xlabel='Age', ylabel='Frequency')
plt.title('Sway Range Distribution', color='Green')
plt.xlabel('Sway Range(deg)', color='#BF0F2F')
plt.ylabel('Frequency', color='#BF0F2F')
plt.hist(df_filt_iqr['Range(deg)'])
axs[1, 0].scatter(df.loc[df['Gender']=='M']['Range(deg)'], df.loc[df['Gender']=='M']['Score'], label='Male', color='Red', alpha=0.5)
axs[1, 0].scatter(df.loc[df['Gender']=='F']['Range(deg)'], df.loc[df['Gender']=='F']['Score'], label='Female', color='Blue', alpha=0.5)
axs[1, 0].set_title("Sway Range vs Score", color='Green')
axs[1, 0].set_xlabel("Sway Range(deg)", color='#BF0F2F')
axs[1, 0].set_ylabel("Score", color='#BF0F2F')
# axs[1, 0].legend()
axs[1, 1].scatter(df.loc[df['Gender']=='M']['Range(deg)'], df.loc[df['Gender']=='M']['Obstacles Collided'], label='Male', color='Red', alpha=0.5)
axs[1, 1].scatter(df.loc[df['Gender']=='F']['Range(deg)'], df.loc[df['Gender']=='F']['Obstacles Collided'], label='Female', color='Blue', alpha=0.5)
axs[1, 1].set_title("Sway Range vs Obstacles Collided", color='Green')
axs[1, 1].set_xlabel("Sway Range(deg)", color='#BF0F2F')
axs[1, 1].set_ylabel("Obstacles Collided", color='#BF0F2F')
# axs[1, 1].legend()
handles, labels = axs[1, 1].get_legend_handles_labels()
fig.legend(handles, labels)
plt.show()

# plt.scatter(df.loc[df['Gender']=='M']['Range(deg)'], df.loc[df['Gender']=='M']['Score'], label='Male', color='Red')
# plt.scatter(df.loc[df['Gender']=='F']['Range(deg)'], df.loc[df['Gender']=='F']['Score'], label='Female', color='Blue')
# plt.title("Range vs Score")
# plt.ylabel('Score', color='#BF0F2F')
# plt.xlabel('Range(deg)', color='#BF0F2F')
# plt.legend()
# plt.show()
#
# plt.scatter(df.loc[df['Gender']=='M']['Range(deg)'], df.loc[df['Gender']=='M']['Obstacles Collided'], label='Male', color='Red')
# plt.scatter(df.loc[df['Gender']=='F']['Range(deg)'], df.loc[df['Gender']=='F']['Obstacles Collided'], label='Female', color='Blue')
# plt.title("Range vs Obstacles Collided")
# plt.ylabel('Obstacles Collided', color='#BF0F2F')
# plt.xlabel('Range(deg)', color='#BF0F2F')
# plt.legend()
# plt.show()
#
# plt.scatter(df.loc[df['Gender']=='M']['Range(deg)'], df.loc[df['Gender']=='M']['Potholes Struck'], label='Male', color='Red')
# plt.scatter(df.loc[df['Gender']=='F']['Range(deg)'], df.loc[df['Gender']=='F']['Potholes Struck'], label='Female', color='Blue')
# plt.title("Range vs Potholes Struck")
# plt.ylabel('Potholes Struck', color='#BF0F2F')
# plt.xlabel('Range(deg)', color='#BF0F2F')
# plt.legend()
# plt.show()

fig = plt.figure()
gs = fig.add_gridspec(2, 2, wspace=0.3, hspace=0.8, height_ratios=[1, 1])
axs = gs.subplots()
plt.subplot(gs[0, :], box_aspect=0.33, xlabel='Age', ylabel='Frequency')
plt.title('Score Distribution', color='Green')
plt.xlabel('Score', color='#BF0F2F')
plt.ylabel('Frequency', color='#BF0F2F')
plt.hist(df_filt_iqr['Score'])
axs[1, 0].scatter(df.loc[df['Gender']=='M']['Score'], df.loc[df['Gender']=='M']['Obstacles Collided'], label='Male', color='Red', alpha=0.5)
axs[1, 0].scatter(df.loc[df['Gender']=='F']['Score'], df.loc[df['Gender']=='F']['Obstacles Collided'], label='Female', color='Blue', alpha=0.5)
axs[1, 0].set_title("Score vs Obstacles Collided", color='Green')
axs[1, 0].set_xlabel("Score", color='#BF0F2F')
axs[1, 0].set_ylabel("Obstacles Collided", color='#BF0F2F')
# axs[1, 0].legend()
axs[1, 1].scatter(df.loc[df['Gender']=='M']['Score'], df.loc[df['Gender']=='M']['Potholes Struck'], label='Male', color='Red', alpha=0.5)
axs[1, 1].scatter(df.loc[df['Gender']=='F']['Score'], df.loc[df['Gender']=='F']['Potholes Struck'], label='Female', color='Blue', alpha=0.5)
axs[1, 1].set_title("Score vs Potholes Struck", color='Green')
axs[1, 1].set_xlabel("Score", color='#BF0F2F')
axs[1, 1].set_ylabel("Potholes Struck", color='#BF0F2F')
# axs[1, 1].legend()
handles, labels = axs[1, 1].get_legend_handles_labels()
fig.legend(handles, labels)
plt.show()

fig = plt.figure()
gs = fig.add_gridspec(2, 1, wspace=0.3, hspace=0.8, height_ratios=[1, 1])
axs = gs.subplots()
plt.subplot(gs[0, 0], xlabel='Age', ylabel='Frequency')
plt.title('Reach angle Distribution', color='Green')
plt.xlabel('Reach angle(deg)', color='#BF0F2F')
plt.ylabel('Frequency', color='#BF0F2F')
plt.hist(df_filt_iqr['Reach(deg)'])
axs[1].scatter(df.loc[df['Gender']=='M']['Reach(deg)'], df.loc[df['Gender']=='M']['Score'], label='Male', color='Red', alpha=0.5)
axs[1].scatter(df.loc[df['Gender']=='F']['Reach(deg)'], df.loc[df['Gender']=='F']['Score'], label='Female', color='Blue', alpha=0.5)
axs[1].set_title("Reach angle vs Score", color='Green')
axs[1].set_xlabel("Reach angle(deg)", color='#BF0F2F')
axs[1].set_ylabel("Score", color='#BF0F2F')
# axs[1].legend()
handles, labels = axs[1].get_legend_handles_labels()
fig.legend(handles, labels)
plt.show()

fig = plt.figure()
gs = fig.add_gridspec(2, 1, wspace=0.3, hspace=0.8, height_ratios=[1, 1])
axs = gs.subplots()
plt.subplot(gs[0, 0], xlabel='Age', ylabel='Frequency')
plt.title('Step angle Distribution', color='Green')
plt.xlabel('Step angle(deg)', color='#BF0F2F')
plt.ylabel('Frequency', color='#BF0F2F')
plt.hist(df_filt_iqr['Step(deg)'])
axs[1].scatter(df.loc[df['Gender']=='M']['Step(deg)'], df.loc[df['Gender']=='M']['Potholes Struck'], label='Male', color='Red', alpha=0.5)
axs[1].scatter(df.loc[df['Gender']=='F']['Step(deg)'], df.loc[df['Gender']=='F']['Potholes Struck'], label='Female', color='Blue', alpha=0.5)
axs[1].set_title("Step angle vs Potholes Struck", color='Green')
axs[1].set_xlabel("Step angle(deg)", color='#BF0F2F')
axs[1].set_ylabel("Potholes Struck", color='#BF0F2F')
# axs[1].legend()
handles, labels = axs[1].get_legend_handles_labels()
fig.legend(handles, labels)
plt.show()

# plt.scatter(df.loc[df['Gender']=='M']['Score'], df.loc[df['Gender']=='M']['Obstacles Collided'], label='Male', color='Red')
# plt.scatter(df.loc[df['Gender']=='F']['Score'], df.loc[df['Gender']=='F']['Obstacles Collided'], label='Female', color='Blue')
# plt.title("Score vs Obstacles Collided")
# plt.ylabel('Obstacles Collided', color='#BF0F2F')
# plt.xlabel('Score', color='#BF0F2F')
# plt.legend()
# plt.show()
#
# plt.scatter(df.loc[df['Gender']=='M']['Score'], df.loc[df['Gender']=='M']['Potholes Struck'], label='Male', color='Red')
# plt.scatter(df.loc[df['Gender']=='F']['Score'], df.loc[df['Gender']=='F']['Potholes Struck'], label='Female', color='Blue')
# plt.title("Score vs Potholes Struck")
# plt.ylabel('Potholes Struck', color='#BF0F2F')
# plt.xlabel('Score', color='#BF0F2F')
# plt.legend()
# plt.show()
